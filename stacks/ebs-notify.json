{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "EBS: Status Notification",
  "Parameters": {
    "SubscriberEmail": {
      "Description": "Subscriber Email",
      "Type": "String"
    }
  },
  "Resources": {
    "SnsTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "EBS Notification Report",
        "TopicName": "ebs-notification-report",
        "Subscription": [{ "Endpoint": { "Ref": "SubscriberEmail" }, "Protocol": "email" }]
      }
    },
    "EbsNotificationIamRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": { "Service": [ "lambda.amazonaws.com" ] },
            "Action": [ "sts:AssumeRole" ]
          }]
        },
        "Path": "/"
      }
    },
    "EbsNotificationIamPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "svc-ebs-notification",
        "Roles": [{ "Ref": "EbsNotificationIamRole" }],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Action": [
              "ec2:DescribeVolumeAttribute",
              "ec2:DescribeVolumeStatus",
              "ec2:DescribeVolumes"
            ],
            "Resource": ["*"]
          }, {
            "Effect": "Allow",
            "Action": ["SNS:Publish"],
            "Resource": {
              "Fn::Join": [
                ":",
                [ "arn", "aws", "sns", { "Ref": "AWS::Region" }, "*", "ebs-notification-report" ]
              ]
            }
          }]
        }
      }
    },
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "ebs-notification-report",
        "Description": "EBS Notification Report",
        "Timeout": 180,
        "Handler": "index.handler",
        "Runtime": "python2.7",
        "Role": {"Fn::GetAtt": ["EbsNotificationIamRole", "Arn" ]},
        "Code": {
          "ZipFile": { "Fn::Join": [ "\n", [
            "import boto3",
            { "Fn::Join": [ "", [ "ec2 = boto3.resource('ec2', region_name='", { "Ref" : "AWS::Region" }, "')" ] ] },
            "sns = boto3.resource('sns')",
            { "Fn::Join": [ "", [
              "sns_endpoint = sns.PlatformEndpoint('arn:aws:sns:",
              { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":ebs-notification-report')"
            ]]},
            "def handler(event, context):",
            "    report = 'The following EBS volumes may need attention:\\n\\n'",
            "    issues = 0",
            "    for vol in ec2.volumes.all():",
            "        if vol.state == 'available':",
            "            report += '  - (unattached) ' + str(vol.id) + ' - Size: ' + str(vol.size) + ' - Created: ' + str(vol.create_time) + '\\n'",
            "            issues += 1",
            "    if issues == 0:",
            "        print 'Nothing to Report'",
            "    else:",
            "        response = sns_endpoint.publish(Message=report, Subject='EBS Volume Report', MessageStructure='string')",
            "        print report"
          ]]}
        }
      }
    },
    "ScheduledRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "ScheduledRule",
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [{
          "Arn": { "Fn::GetAtt": ["LambdaFunction", "Arn"] },
          "Id": "TargetFunctionV1"
        }]
      }
    },
    "PermissionForEventsToInvokeLambda": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": { "Ref": "LambdaFunction" },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": { "Fn::GetAtt": ["ScheduledRule", "Arn"] }
      }
    }
  }
}
